package tests

import (
	s "server/infra/storage"
	"server/log"
	"server/utils"
	"strings"
	"testing"
	"time"
)

func TestSplit(t *testing.T) {
	gClient := s.NewGCSClient("project_id")

	if gClient == nil {
		log.Errorf("create google client")
	}
	filename := "hello.jpg"
	content := ""
	bucket := "dev-qt"

	ojbTypeIndex := strings.LastIndex(filename, ".")
	ojbType := filename[ojbTypeIndex:]
	objName := time.Unix(time.Now().Unix(), 0).Format("2006-01-02_15-04-05")
	objName += ojbType

	picContent, err := utils.Base64Decode(content)
	if err != nil {
		log.Errorf(err.Error())
	}

	uri, err := gClient.WriteObjectToBucket(bucket, "test/"+objName, picContent)
	if err != nil {
		log.Errorf(err.Error())
	}
	t.Log(uri)

}
